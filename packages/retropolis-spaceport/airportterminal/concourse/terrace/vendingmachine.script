# Retropolis.Spaceport.AirshipTerminal.Terrace.VendingMachine

## Start

> The vending machine displays a message:

`_hasBottle = !!@inventory['PixelArtAcademy.Items.Bottle']`

-> [AlreadyHasBottle] `_hasBottle`
    
machine:
    Welcome to Retropolis Spaceport â€” Airport Terminal. 
    Would you like a beverage? Kindly provided by the city of Retropolis.
    
## Selection

* Apple juice -> [AJ]
* Orange juice -> [OJ]
* Water -> [Water]
* Nevermind -> [End]

## AJ

`_drinkType = 'AppleJuice'`
-> [Prepare]

## OJ

`_drinkType = 'LemonLimeJuice'`
-> [Prepare]

## Water

`_drinkType = 'Water'`
-> [Prepare]

## Prepare

### PrepareDrink

-> [PrepareOwnBottle] `_hasBottle`

> The robotic machine places a clear glass bottle under a nozzle. 

-> [Pour]

## PrepareOwnBottle

> You place your bottle under the nozzle and the machine takes over.

### ReturnBottle

-> [Pour]

## Pour

> `_.capitalize(_drink.fullName())` flows out and as the liquid fills towards the top, a label digitally appears on the glass.

> You take the bottle and the machine displays:

### ReceiveBottle

machine:
    Enjoy your `_drink.fullName()`.
    You can keep the bottle, ![return it](return bottle) to the vending machine, or drop it off at one of the collection stations around the city.

-> [End]

## AlreadyHasBottle

-> [BottleIsFull] `@inventory['PixelArtAcademy.Items.Bottle'].drinkType`

machine: I see you already have a bottle. Would you like a refill?
    
-> [Selection]

## BottleIsFull

machine: I see you already have a bottle. Please ![drink the contents](drink from bottle) or ![return the bottle](return bottle) to receive a new beverage.
    
-> [End]

## ReturnBottle

-> [NoBottle] `not @inventory['PixelArtAcademy.Items.Bottle']`

> You push the bottle into a collection slot.

### ReturnBottle

> The machine displays:

machine: Thank you for returning the bottle. Retropolis stays clean because citizens take good care of it.

-> [End]

## NoBottle

> You don't have a bottle.

-> [End]

## End
